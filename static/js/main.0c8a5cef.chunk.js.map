{"version":3,"sources":["components/Feedback/Feedback.js","components/Feedback/App.js","index.js"],"names":["Feedback","state","good","neutral","bad","stateIncrement","O_o","setState","prev","chechIfLiked","Object","values","reduce","acc","currentValue","countPresentage","total","Math","round","this","countPr","className","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAMEC,eAAiB,SAACC,GAAD,OAAS,EAAKC,UAAS,SAACC,GAAD,sBAAcF,EAAME,EAAKF,GAAO,OAN1E,EAOEG,aAAe,kBAAMC,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAuBD,EAAMC,MAPrF,EAQEC,gBAAkB,SAACd,EAAOe,GAAR,OAAkBC,KAAKC,MAAO,CAACjB,GAASe,EAAS,MARrE,uDASY,IAAD,OACDA,EAAQG,KAAKV,eACbW,EAAU,SAACnB,EAAOe,GAAR,OAAkB,EAAKD,gBAAgBd,EAAOe,IAFvD,EAGuBG,KAAKlB,MAA3BC,EAHD,EAGCA,KAAMC,EAHP,EAGOA,QAAQC,EAHf,EAGeA,IACtB,OACE,yBAAKiB,UAAU,iBACb,4BAAQC,QAAS,kBAAM,EAAKjB,eAAe,UAA3C,QACA,4BAAQiB,QAAS,kBAAM,EAAKjB,eAAe,aAA3C,WACA,4BAAQiB,QAAS,kBAAM,EAAKjB,eAAe,SAA3C,OACCW,EAAQ,GACL,yBAAKK,UAAU,YACb,0BAAMA,UAAU,QAAhB,QAA4B,8BAAOnB,GACjC,gDAAsBkB,EAAQlB,EAAMc,KACtC,uBAAGK,UAAU,WAAb,WAA+B,8BAAOlB,GACpC,gDAAsBiB,EAAQjB,EAASa,KACzC,uBAAGK,UAAU,OAAb,OAAuB,8BAAOjB,GAC5B,gDAAsBgB,EAAQhB,EAAKY,KAErC,uBAAGK,UAAU,SAAb,UAA4B,8BAAOL,UA3BjD,GAA8BO,aCAjBC,EAAM,kBACjB,6BACE,wCACA,kBAAC,EAAD,QCJJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0c8a5cef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport T from \"prop-types\";\n// import styled from 'styled-components'\n\n// const Button = styled.button``\n\nexport class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  stateIncrement = (O_o) => this.setState((prev) => ({ [O_o]: prev[O_o] + 1 }));\n  chechIfLiked = () => Object.values(this.state).reduce((acc, currentValue) => acc + currentValue);\n  countPresentage = (state, total) => Math.round(([state] / total) * 100);\n  render() {\n    const total = this.chechIfLiked();\n    const countPr = (state, total) => this.countPresentage(state, total);\n    const { good, neutral,bad } = this.state;\n    return (\n      <div className=\"statisitcView\">\n        <button onClick={() => this.stateIncrement(\"good\")}>Good</button>\n        <button onClick={() => this.stateIncrement(\"neutral\")}>neutral</button>\n        <button onClick={() => this.stateIncrement(\"bad\")}>bad</button>\n        {total > 0 && (\n            <div className=\"showStat\">\n              <span className=\"good\">Good:<span>{good}</span>\n                <span> Feedback % is:{countPr(good, total)}</span></span>\n              <p className=\"neutral\">Neutral:<span>{neutral}</span>\n                <span> Feedback % is:{countPr(neutral, total)}</span></p>\n              <p className=\"bad\">Bad:<span>{bad}</span>\n                <span>Feedback % is: {countPr(bad, total)}</span>\n              </p>\n              <p className=\"total\">Total: <span>{total}</span></p>\n            </div>\n        )}\n      </div>\n    );\n  }\n}\n\n\n\n\n//++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n// export class Feedback extends Component {\n//   T = {};\n//   // static defaultProps={}\n\n//   // goodIncrement=()=>{\n//   //   return\n//   // }\n\n//   // goodIncrement = () => this.props.goodIncrement(this.props.state.good);\n\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//     ifLiked: false,\n//   };\n//   total = 0;\n//   // state = {\n//   //   good: this.props.state.good || 0,\n//   //   neutral: this.props.state.neutral || 0,\n//   //   bad: this.props.state.bad || 0,\n//   // };\n//   stateIncrement = (xxx) => this.setState((prev) => ({ [xxx]: prev[xxx] + 1 }));\n// goodIncrement = () => this.setState((prev) => ({ good: prev.good + 1 }));\n//   // neutralIncrement = () => this.setState((prev) => ({ neutral: prev.neutral + 1 }));\n//   // badIncrement = () => this.setState((prev) => ({ bad: prev.bad + 1 }));\n\n//   changeIfLiked = () => this.setState((prev) => ({ ifLiked: !prev.ifLiked }));\n\n//   chechIfLiked = () =>\n//     Object.values(this.state).reduce((acc, currentValue) => acc + currentValue);\n\n//   render() {\n//     const total = this.chechIfLiked();\n//     const { good, neutral } = this.state;\n//     return (\n//       <div className=\"statisitcView\">\n//         {/* <p className=\"good\">{this.props.state.good}</p>    // так прокидывать из App\n//         <button onClick={this.props.goodIncrement}>Good</button> */}\n//         {/* <button onClick={this.props.goodIncrement(this.state.good)}>Good</button> */}\n//         {/* <button onClick={this.goodIncrement('good')}>Good</button> */}\n//         {/* if ( (good || neutral || bad) > 0 && console.log(222)) */}\n//         <button onClick={() => this.stateIncrement(\"good\")}>Good</button>\n//         <button onClick={() => this.stateIncrement(\"neutral\")}>neutral</button>\n//         <button onClick={() => this.stateIncrement(\"bad\")}>bad</button>\n//         {total > 0 && (\n//           <>\n//             <p className=\"good\">{good}</p>\n//             <p className=\"neutral\">{neutral}</p>\n//             <p className=\"bad\">{this.state.bad}</p>\n//             <div className=\"presenfage\">\n//               <p className=\"show\">presenfage show</p>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\n// import sytles from \"./Feedback.module.css\";\nimport { Feedback } from \"./Feedback\";\n\n// const {} = sytles;\n\nexport const App = () => (\n  <div>\n    <h2>Feedback</h2>\n    <Feedback />\n  </div>\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//+++++++++++++++++++++++++++++++++++\n// export class App extends Component {\n//   // state = {\n//   //   good: 0,\n//   //   neutral: 0,\n//   //   bad: 0,\n//   // };\n//   // goodIncrement = () => this.setState((prev) => ({ good: prev.good + 1 }))\n//   render() {\n\n//     // console.log(this)\n//     return (\n//       <div>\n//         {/* <p>{this}</p> */}\n//         <h2>Feedback</h2>\n//         {/* <Feedback state={this.state} goodIncrement={this.goodIncrement} /> */}\n//         <Feedback />\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from './styles.css'\nimport {App} from \"./components/Feedback/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}